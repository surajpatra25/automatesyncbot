{"ast":null,"code":"var _jsxFileName = \"/Users/117446/Documents/AI Chatbot/automatesyncbot/src/components/HomeCoponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognitionExample = () => {\n  _s();\n  const [recognition, setRecognition] = useState(null);\n  const [recognizing, setRecognizing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  useEffect(() => {\n    const initSpeechRecognition = () => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      recognition.onresult = event => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        setTranscription(finalTranscript);\n      };\n      setRecognition(recognition);\n    };\n    if (window.webkitSpeechRecognition) {\n      initSpeechRecognition();\n    } else {\n      alert('Speech recognition is not supported in your browser.');\n    }\n  }, []);\n  const toggleRecognition = () => {\n    if (recognition) {\n      if (recognizing) {\n        recognition.stop();\n      } else {\n        recognition.start();\n      }\n      setRecognizing(!recognizing);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech Recognition Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRecognition,\n      children: recognizing ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your speech will appear here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechRecognitionExample, \"sB0lbSTvd2s40HXizGkd1ViXFJI=\");\n_c = SpeechRecognitionExample;\nexport default SpeechRecognitionExample;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognitionExample\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpeechRecognitionExample","_s","recognition","setRecognition","recognizing","setRecognizing","transcription","setTranscription","initSpeechRecognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","transcript","alert","toggleRecognition","stop","start","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/117446/Documents/AI Chatbot/automatesyncbot/src/components/HomeCoponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SpeechRecognitionExample = () => {\n  const [recognition, setRecognition] = useState(null);\n  const [recognizing, setRecognizing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n\n  useEffect(() => {\n    const initSpeechRecognition = () => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n\n      recognition.onresult = (event) => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        setTranscription(finalTranscript);\n      };\n\n      setRecognition(recognition);\n    };\n\n    if (window.webkitSpeechRecognition) {\n      initSpeechRecognition();\n    } else {\n      alert('Speech recognition is not supported in your browser.');\n    }\n  }, []);\n\n  const toggleRecognition = () => {\n    if (recognition) {\n      if (recognizing) {\n        recognition.stop();\n      } else {\n        recognition.start();\n      }\n      setRecognizing(!recognizing);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Speech Recognition Example</h1>\n      <button onClick={toggleRecognition}>\n        {recognizing ? 'Stop Recording' : 'Start Recording'}\n      </button>\n      <div>\n        <p>Your speech will appear here:</p>\n        <div>{transcription}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechRecognitionExample;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}